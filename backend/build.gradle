plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
}

group = 'cz.cvut.fit.tjv.fitnessApp'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

tasks.test {
    finalizedBy jacocoTestReport // Generate JaCoCo report after tests
}

dependencies {
    // Spring Boot Starter for Core Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Spring Boot Starter for Spring Data JPA (includes Hibernate)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Lombok for reducing boilerplate code
    implementation 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    // Rest API documentation
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'

    implementation 'org.postgresql:postgresql:42.7.2'
    // H2 in-memory database for testing
    runtimeOnly 'com.h2database:h2'

    // JUnit for testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    // Mockito
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
}

test {
    useJUnitPlatform()
    jvmArgs '-Xshare:off'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'cz.cvut.fit.tjv.fitnessApp.FitnessApplication'
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    // Handle duplicate files
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    exclude "META-INF/*.SF", "META-INF/*.DSA", "META-INF/*.RSA"
}